{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","Components/Filter/Filter.js","Components/Container/Container.js","redux/contacts/contacts-operations.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/ContactList/ContactList.container.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","resetFilter","createAction","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","contactSelectors","getItems","state","contacts","items","getFilter","filter","connect","value","dispatch","onChange","e","target","className","style","filter_label","type","Container","children","container","axios","defaults","baseURL","ContactForm","name","props","number","onInputChange","currentTarget","setState","addNoRepeatContact","some","toLowerCase","alert","onSubmit","reset","onHandleSubmit","preventDefault","form_container","this","form_label","input","pattern","title","required","add_button","Component","defaultProps","contact","post","then","response","data","catch","error","ContactItem","id","deleteContact","list_item","new_item","delete_btn","onClick","ContactList","onContactFetch","useEffect","contact_list","map","normalizedFilter","includes","getFilteredContacts","delete","get","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","_","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.399e5be9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ContactItem_list_item__1-00j\",\"delete_btn\":\"ContactItem_delete_btn__2et50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__1MW0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3jlxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__3mpex\"};","import { createAction } from \"@reduxjs/toolkit\"\n\nexport const resetFilter = createAction(\"contacts/resetFilter\")\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\")\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\")\nexport const addContactError = createAction(\"contacts/addContactError\")\n\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\")\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\")\nexport const deleteContactError = createAction(\"contacts/deleteContactError\")\n\nexport const getContactRequest = createAction(\"contacts/getContactRequest\")\nexport const getContactSuccess = createAction(\"contacts/getContactSuccess\")\nexport const getContactError = createAction(\"contacts/getContactError\")\n","const getItems = (state) => state.contacts.items\r\nconst getFilter = (state) => state.contacts.filter\r\n\r\nconst contactSelectors = {\r\n    getItems,\r\n    getFilter,\r\n}\r\n\r\nexport default contactSelectors\r\n","import React from \"react\"\nimport style from \"./Filter.module.css\"\nimport { connect } from \"react-redux\"\nimport { resetFilter } from \"../../redux/contacts/contacts-actions\"\nimport contactSelectors from \"../../redux/contacts/contacts-selectors\"\n\nconst Filter = ({ value, onChange }) => (\n    <label className={style.filter_label}>\n        Find contacts by name\n        <br />\n        <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n)\n\nconst mapStateToProps = (state) => ({\n    value: contactSelectors.getFilter(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onChange: (e) => dispatch(resetFilter(e.target.value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n","import React from \"react\";\nimport style from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={style.container}>{children}</div>\n);\n\nexport default Container;\n","import {\r\n    addContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    deleteContactError,\r\n    deleteContactSuccess,\r\n    deleteContactRequest,\r\n    getContactError,\r\n    getContactRequest,\r\n    getContactSuccess,\r\n} from \"./contacts-actions\"\r\n\r\nimport axios from \"axios\"\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040/\"\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n    dispatch(addContactRequest())\r\n    axios\r\n        .post(\"contacts\", contact)\r\n        .then((response) => dispatch(addContactSuccess(response.data)))\r\n        .catch((error) => dispatch(addContactError(error)))\r\n}\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n    dispatch(deleteContactRequest())\r\n    axios\r\n        .delete(\"contacts/\" + id)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch((error) => dispatch(deleteContactError(error)))\r\n}\r\n\r\nexport const contactFetch = () => (dispatch) => {\r\n    dispatch(getContactRequest())\r\n    axios\r\n        .get(\"contacts\")\r\n        .then((response) => dispatch(getContactSuccess(response.data)))\r\n        .catch((error) => dispatch(getContactError(error)))\r\n}\r\n","import React, { Component } from \"react\"\nimport style from \"./ContactForm.module.css\"\nimport { connect } from \"react-redux\"\nimport { addContact } from \"../../redux/contacts/contacts-operations\"\nimport contactSelectors from \"../../redux/contacts/contacts-selectors\"\n\nclass ContactForm extends Component {\n    static defaultProps = {\n        name: \"\",\n        number: \"\",\n    }\n\n    state = {\n        name: this.props.name,\n        number: this.props.number,\n    }\n\n    onInputChange = (e) => {\n        const { name, value } = e.currentTarget\n        this.setState({ [name]: value })\n    }\n\n    addNoRepeatContact = (state, contacts) => {\n        const { name, number } = state\n        if (contacts.some((contacts) => contacts.name.toLowerCase() === name.toLowerCase())) {\n            alert(`${name} is already in contacts`)\n            return\n        }\n        if (contacts.some((contacts) => contacts.number === number)) {\n            alert(`${number} is already in contacts`)\n            return\n        }\n\n        this.props.onSubmit(state)\n        this.reset()\n    }\n\n    onHandleSubmit = (e) => {\n        e.preventDefault()\n        const { contacts } = this.props\n        this.addNoRepeatContact(this.state, contacts)\n    }\n\n    reset = () => {\n        this.setState({\n            name: \"\",\n            number: \"\",\n        })\n    }\n    render() {\n        return (\n            <div className={style.form_container}>\n                <form onSubmit={this.onHandleSubmit}>\n                    <h2 className={style.form_label}>Name</h2>\n                    <input\n                        className={style.input}\n                        onChange={this.onInputChange}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={this.state.name}\n                    />\n                    <h2 className={style.form_label}>Number</h2>\n                    <input\n                        className={style.input}\n                        onChange={this.onInputChange}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={this.state.number}\n                    />\n                    <br />\n                    <button type=\"submit\" className={style.add_button}>\n                        {\" \"}\n                        Add contact\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    contacts: contactSelectors.getItems(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: ({ name, number }) => dispatch(addContact({ name, number })),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\n","import React from \"react\"\nimport style from \"./ContactItem.module.css\"\n//import { deleteContact } from \"../../redux/contacts/contacts-operations\"\n\nconst ContactItem = ({ id, name, number, deleteContact }) => (\n    <li key={id} className={style.list_item}>\n        <span className={style.new_item}>\n            {name}: {number}\n        </span>\n        <button className={style.delete_btn} onClick={() => deleteContact(id)}>\n            Delete\n        </button>\n    </li>\n)\n\nexport default ContactItem\n","import { useEffect } from \"react\"\nimport style from \"./ContactList.module.css\"\nimport ContactItem from \"../ContactItem\"\n\nconst ContactList = ({ contacts, deleteContact, onContactFetch }) => {\n    useEffect(() => {\n        onContactFetch()\n    }, [onContactFetch])\n    return (\n        <ul className={style.contact_list}>\n            {contacts.map(({ id, name, number }) => (\n                <ContactItem id={id} key={id} name={name} number={number} deleteContact={deleteContact} />\n            ))}\n        </ul>\n    )\n}\n\nexport default ContactList\n","import { connect } from \"react-redux\"\r\nimport { deleteContact, contactFetch } from \"../../redux/contacts/contacts-operations\"\r\nimport ContactList from \"./ContactList\"\r\n\r\nconst getFilteredContacts = (contacts, filter) => {\r\n    if (!filter) return contacts\r\n    const normalizedFilter = filter.toLowerCase()\r\n\r\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter))\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { items, filter } = state.contacts\r\n\r\n    const filteredContacts = getFilteredContacts(items, filter)\r\n    return {\r\n        contacts: filteredContacts,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteContact: (id) => dispatch(deleteContact(id)),\r\n        onContactFetch: () => dispatch(contactFetch()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from \"react\"\n//data\n\n//components\nimport Filter from \"../src/Components/Filter\"\nimport Container from \"../src/Components/Container\"\nimport ContactForm from \"../src/Components/ContactForm\"\nimport ContactList from \"../src/Components/ContactList/ContactList.container\"\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        name: \"\",\n        filter: \"\",\n    }\n    render() {\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm />\n                <h1>Contacts</h1>\n                <Filter />\n                <ContactList />\n            </Container>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\"\nimport {\n    addContactError,\n    addContactRequest,\n    addContactSuccess,\n    deleteContactError,\n    deleteContactSuccess,\n    deleteContactRequest,\n    getContactError,\n    getContactRequest,\n    getContactSuccess,\n    resetFilter,\n} from \"./contacts-actions\"\nimport { createReducer } from \"@reduxjs/toolkit\"\n\nconst items = createReducer([], {\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n    [getContactSuccess]: (_, { payload }) => payload,\n})\n\nconst filter = createReducer(\"\", {\n    [resetFilter]: (_, { payload }) => payload,\n})\n\nconst loading = createReducer(false, {\n    [addContactRequest]: () => true,\n    [addContactError]: () => false,\n    [addContactSuccess]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactError]: () => false,\n    [deleteContactSuccess]: () => false,\n    [getContactRequest]: () => true,\n    [getContactError]: () => false,\n    [getContactSuccess]: () => false,\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n})\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\n// import contactReducer from \"./contacts/contacts-reducer\"\nimport logger from \"redux-logger\"\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\"\n//import storage from \"redux-persist/lib/storage\"\nimport contactsReducer from \"./contacts/contacts-reducer\"\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n]\n\n// const contactsPersistConfig = {\n//     key: \"contacts\",\n//     storage,\n//     blacklist: [\"filter\"],\n// }\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === \"development\",\n})\n\n// const persistor = persistStore(store)\n\n// export { store, persistor }\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { store } from \"../src/redux/store\"\nimport { Provider } from \"react-redux\"\n//import { PersistGate } from \"redux-persist/integration/react\"\n\n// store.dispatch(saveContact)\n// store.dispatch(deleteContact)\n// store.dispatch(resetFilter)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/* <PersistGate loading={null} persistor={persistor}> */}\n            <App />\n            {/* </PersistGate> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"ContactForm_form_container__3gEeg\",\"add_button\":\"ContactForm_add_button__2czcI\",\"input\":\"ContactForm_input__2L7ta\",\"form_label\":\"ContactForm_form_label__2687K\"};"],"sourceRoot":""}